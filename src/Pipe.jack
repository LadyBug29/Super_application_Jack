class Pipe{
    field int X1;
    field int Y1;
    field int X2;
    field int Y2;
    field int difference;
    field int ended;
    constructor Pipe new(int x1, int y1, int x2, int y2, int diff)
    {
        let X1 = x1;
        let Y1 = MathExtensions.findRemains(y1, 255 - diff);
        let X2 = x2;
        let Y2 = y2;
        let difference = diff;
        let ended = 0;
        do drawPipe();
        return this;
    }

    method void drawPipe(){
        do Screen.setColor(true);
        do Screen.drawRectangle(X1, 0, X2, Y1);
        do Screen.drawRectangle(X1, Y1 + difference, X2, Y2);
        return;
    }

    method void move(){
        let X1 = X1-3;
        if (X1<0){
            let X1 = 0;
        }
        let X2 = X2-3;
        if (X2<0){
            let X2 = 0;
        }
        if (~(X2=0)){
            do Screen.setColor(false);
            do Screen.drawRectangle(X1 +3 , 0, X2 + 3, Y1);
            do Screen.drawRectangle(X1 + 3, Y1 + difference, X2 + 3, Y2);
            do Screen.setColor(true);
            do Screen.drawRectangle(X1, 0, X2, Y1);
            do Screen.drawRectangle(X1, Y1 + difference, X2, Y2);
        }
        if (X2=0){
            if (ended=0){
                let ended = 1;
                do Screen.setColor(false);
                do Screen.drawRectangle(0, Y1, 3, Y2);
                do Screen.drawRectangle(0, 0, 3, Y2-difference);
            }
        }
        return;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
}